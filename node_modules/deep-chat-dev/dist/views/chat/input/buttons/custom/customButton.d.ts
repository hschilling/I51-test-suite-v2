import { DefinedButtonStateStyles } from '../../../../../types/buttonInternal';
import { InputButton } from '../inputButton';
import { CustomButton as CustomButtonT, CustomButtonStyles } from '../../../../../types/customButton';
type Styles = DefinedButtonStateStyles<CustomButtonStyles>;
export declare class CustomButton extends InputButton<Styles> {
    static readonly INDICATOR_PREFIX = "custom";
    static readonly BUTTON_CLASS = "custom-button";
    private readonly _innerElements;
    private _originalElementRef;
    private _state;
    private readonly _onClick;
    private readonly _dropupStyles;
    constructor(customButton: CustomButtonT, index: number);
    private static createButtonElement;
    private createInnerElements;
    private createInnerElement;
    private setSetState;
    private addClickListener;
    private changeState;
    private assignDropupItemStyle;
    private changeToDefault;
    private changeToActive;
    private changeToDisabled;
    setDropupItem(dropupItem: HTMLElement): void;
}
export {};
//# sourceMappingURL=customButton.d.ts.map