name: Playwright Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    env:
      SS_KEY: ""
      PQAI_KEY: ""
      TAV_KEY: ""
      ENV: "test"

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create public directory if it doesn't exist
      run: mkdir -p public/build
      
    - name: Create environment variables module
      run: |
        echo "Creating environment variables module..."
        cat > src/env.js << 'EOF'
        // Environment variables with defaults
        export const SS_KEY = "";
        export const PQAI_KEY = "";
        export const TAV_KEY = "";
        export const ENV = "test";
        EOF
      
    - name: Patch environment variables imports
      run: |
        echo "Patching commonFunctions.js..."
        if grep -q "import.*from 'process.env'" src/assistant/commonFunctions.js; then
          sed -i "s/import.*from 'process.env'/import { SS_KEY, PQAI_KEY, TAV_KEY } from '..\/env.js'/" src/assistant/commonFunctions.js
        fi
        
        echo "Patching openaiUtils.js..."
        if grep -q "import.*ENV.*from 'process.env'" src/utils/openaiUtils.js; then
          sed -i "s/import.*ENV.*from 'process.env'/import { ENV } from '..\/env.js'/" src/utils/openaiUtils.js
        fi
        
        # Find any other files importing from process.env
        echo "Checking for other process.env imports..."
        grep -r "import.*from 'process.env'" src || echo "No other imports found"
      
    - name: Build app
      run: npm run build
      env:
        SS_KEY: ""
        PQAI_KEY: ""
        TAV_KEY: ""
        ENV: "test"
      
    - name: Debug directory structure
      run: |
        echo "Current directory structure:"
        ls -la
        echo "Public directory contents:"
        ls -la public || echo "Public directory not found"
        if [ -d "public/build" ]; then
          echo "Public/build directory contents:"
          ls -la public/build
        else
          echo "Public/build directory not found"
        fi
        
        # Check if index.html exists
        if [ -f "public/index.html" ]; then
          echo "index.html exists"
          echo "First 100 lines of index.html:"
          head -n 100 public/index.html
        else
          echo "index.html not found, creating a basic one..."
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>BIDARA Deep Chat</title>
            <link rel="stylesheet" href="build/bundle.css">
          </head>
          <body>
            <div id="app"></div>
            <script src="build/bundle.js"></script>
          </body>
          </html>
          EOF
          echo "Created index.html"
        fi
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Start server in background
      run: |
        echo "Starting server..."
        npx sirv public --port 8080 --dev &
        echo "Waiting for server to start..."
        sleep 5
        echo "Testing if server is running..."
        curl -v http://localhost:8080/ || echo "Failed to connect to server"
        echo "Testing bundle.js..."
        curl -v http://localhost:8080/build/bundle.js -o /dev/null || echo "Failed to access bundle.js"
      
    - name: Run Playwright tests
      run: |
        echo "Running tests without webServer config..."
        xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npx playwright test
      
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30